name: Build Windows Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install build dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build standalone executable
        shell: pwsh
        run: |
          pyinstaller --clean --noconfirm minecraft_server_finder.spec

      - name: Determine release version
        shell: pwsh
        run: |
          $ref = '${{ github.ref }}'
          $refName = '${{ github.ref_name }}'

          if ($ref -like 'refs/tags/*' -and -not [string]::IsNullOrWhiteSpace($refName)) {
            $version = $refName
          }
          else {
            $version = 'v' + '${{ github.run_number }}'
          }

          $safeLabel = $version -replace '[^0-9A-Za-z._-]', '_'

          "RELEASE_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          "BUILD_LABEL=$safeLabel"   | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Prepare release artifact
        shell: pwsh
        run: |
          $distDir = Join-Path (Get-Location) 'dist'
          $sourceExe = Join-Path $distDir 'MinecraftServerFinder.exe'
          if (-not (Test-Path $sourceExe)) {
            throw "Expected executable not found: $sourceExe"
          }

          $releaseDir = Join-Path (Get-Location) 'release'
          New-Item -ItemType Directory -Path $releaseDir -Force | Out-Null

          $targetExe = Join-Path $releaseDir ("MinecraftServerFinder-${{ env.BUILD_LABEL }}.exe")
          Copy-Item $sourceExe -Destination $targetExe -Force

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: MinecraftServerFinder-${{ env.BUILD_LABEL }}
          path: release/MinecraftServerFinder-${{ env.BUILD_LABEL }}.exe
          if-no-files-found: error

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: MinecraftServerFinder ${{ env.RELEASE_VERSION }}
          files: release/MinecraftServerFinder-${{ env.BUILD_LABEL }}.exe
          generate_release_notes: true
          draft: false
          prerelease: false
          make_latest: true
          fail_on_unmatched_files: true
          allow_updates: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
